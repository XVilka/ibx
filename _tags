# OASIS_START
# DO NOT EDIT (digest: b636576f42385b72d46109940121f93c)
# Ignore VCS directories, you can use the same kind of rule outside 
# OASIS_START/STOP if you want to exclude directories that contains 
# useless stuff for the build process
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library ibx
"lib/ibx.cmxs": use_ibx
"lib/config.cmx": for-pack(Ibx)
"lib/std_internal.cmx": for-pack(Ibx)
"lib/send_tag.cmx": for-pack(Ibx)
"lib/recv_tag.cmx": for-pack(Ibx)
"lib/tws_prot.cmx": for-pack(Ibx)
"lib/twsable.cmx": for-pack(Ibx)
"lib/pickable.cmx": for-pack(Ibx)
"lib/unpickable.cmx": for-pack(Ibx)
"lib/query_intf.cmx": for-pack(Ibx)
"lib/submit_order.cmx": for-pack(Ibx)
"lib/execution_id.cmx": for-pack(Ibx)
"lib/query.cmx": for-pack(Ibx)
"lib/response_intf.cmx": for-pack(Ibx)
"lib/response.cmx": for-pack(Ibx)
"lib/symbol.cmx": for-pack(Ibx)
"lib/exchange.cmx": for-pack(Ibx)
"lib/currency.cmx": for-pack(Ibx)
"lib/price.cmx": for-pack(Ibx)
"lib/account_code.cmx": for-pack(Ibx)
"lib/raw_contract_intf.cmx": for-pack(Ibx)
"lib/raw_contract.cmx": for-pack(Ibx)
"lib/contract.cmx": for-pack(Ibx)
"lib/raw_order_intf.cmx": for-pack(Ibx)
"lib/raw_order.cmx": for-pack(Ibx)
"lib/order.cmx": for-pack(Ibx)
"lib/ib.cmx": for-pack(Ibx)
"lib/tws_reqs.cmx": for-pack(Ibx)
"lib/tws.cmx": for-pack(Ibx)
"lib/client_id.cmx": for-pack(Ibx)
"lib/client_intf.cmx": for-pack(Ibx)
"lib/std.cmx": for-pack(Ibx)
<lib/*.ml{,i}>: pkg_core
<lib/*.ml{,i}>: pkg_async
<lib/*.ml{,i}>: pkg_sexplib.syntax
<lib/*.ml{,i}>: pkg_fieldslib.syntax
<lib/*.ml{,i}>: pkg_threads
<lib/*.ml{,i}>: pkg_str
# Executable test_runner
<lib_test/test_runner.{native,byte}>: use_ibx
<lib_test/test_runner.{native,byte}>: pkg_core_extended
<lib_test/test_runner.{native,byte}>: pkg_core
<lib_test/test_runner.{native,byte}>: pkg_async
<lib_test/test_runner.{native,byte}>: pkg_sexplib.syntax
<lib_test/test_runner.{native,byte}>: pkg_fieldslib.syntax
<lib_test/test_runner.{native,byte}>: pkg_threads
<lib_test/test_runner.{native,byte}>: pkg_str
<lib_test/*.ml{,i}>: use_ibx
<lib_test/*.ml{,i}>: pkg_core_extended
<lib_test/*.ml{,i}>: pkg_core
<lib_test/*.ml{,i}>: pkg_async
<lib_test/*.ml{,i}>: pkg_sexplib.syntax
<lib_test/*.ml{,i}>: pkg_fieldslib.syntax
<lib_test/*.ml{,i}>: pkg_threads
<lib_test/*.ml{,i}>: pkg_str
# OASIS_STOP
<lib/*.ml{,i}>: syntax_camlp4o
<lib_test/*.ml{,i}>: syntax_camlp4o
<examples/client/*.ml{,i}>: syntax_camlp4o
<**/*.ml{,i}>: annot, warn_A, warn_e, warn_r

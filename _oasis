OASISFormat:      0.4
Name:             ibx
Version:          0.7.4
Synopsis:         OCaml implementation of the Interactive Brokers TWS API
Description:      IBX is a pure OCaml implementation of the Interactive Brokers
                  Trader Workstation API (TWS API) built on top of
                  Jane Street's Core and Async library.
Authors:          Oliver Gu <gu.oliver@yahoo.com>
Maintainers:      Oliver Gu <gu.oliver@yahoo.com>
License:          LGPL-2.1+ with OCaml linking exception
OCamlVersion:     >= 4.00
FindlibVersion:   >= 1.3.1
Homepage:         https://bitbucket.org/ogu/ibx
Plugins:          META (0.4), StdFiles (0.4), DevFiles (0.4)
XStdFilesREADME:  false
BuildTools:       ocamlbuild, ocamldoc
PostDistcleanCommand: $rmdir ibx.log

# Flags

Flag examples
  Description:    Build all examples
  Default:        false

# Library

Library ibx
  Path:           lib
  FindlibName:    ibx
  Pack:           true
  Modules:        Account_code,
                  Bar,
                  Client_id,
                  Config,
                  Contract,
                  Contract_id,
                  Currency,
                  Exchange,
                  Execution_id,
                  Ib,
                  Option_right,
                  Order,
                  Order_id,
                  Pickable,
                  Price,
                  Query,
                  Query_intf,
                  Raw_bar,
                  Raw_bar_intf,
                  Raw_contract,
                  Raw_contract_intf,
                  Raw_order,
                  Raw_order_intf,
                  Recv_tag,
                  Response,
                  Response_intf,
                  Security_id,
                  Security_type,
                  Send_tag,
                  Std,
                  Std_internal,
                  Submit_order,
                  Symbol,
                  Trading_times,
                  Tws,
                  Tws_prot,
                  Tws_reqs,
                  Tws_result,
                  Twsable,
                  Unpickable,
                  Volume
  BuildDepends:   core  (>= 112.17.00),
                  async (>= 112.17.00),
                  sexplib.syntax,
                  fieldslib.syntax,
                  textutils,
                  threads,
                  str
  CompiledObject: best

# Tests

Executable test_runner
  Path:           lib_test
  MainIs:         test_runner.ml
  Install:        false
  BuildDepends:   ibx
  CompiledObject: best

Test test_runner
  Run$:           flag(tests)
  Command:        $test_runner
  WorkingDirectory: lib_test

# Examples

Executable "buy_market_order"
  Build$:         flag(examples)
  Path:           examples
  MainIs:         buy_market_order.ml
  Install:        false
  BuildDepends:   ibx
  CompiledObject: best

Executable "demultiplex"
  Build$:         flag(examples)
  Path:           examples
  MainIs:         demultiplex.ml
  Install:        false
  BuildDepends:   ibx
  CompiledObject: best

Executable "futures_chain"
  Build$:         flag(examples)
  Path:           examples
  MainIs:         futures_chain.ml
  Install:        false
  BuildDepends:   ibx
  CompiledObject: best

Executable "last_price"
  Build$:         flag(examples)
  Path:           examples
  MainIs:         last_price.ml
  Install:        false
  BuildDepends:   ibx
  CompiledObject: best

Executable "plot_history"
  Build$:         flag(examples)
  Path:           examples
  MainIs:         plot_history.ml
  Install:        false
  BuildDepends:   ibx, gnuplot
  CompiledObject: best

Executable "plot_taq_data"
  Build$:         flag(examples)
  Path:           examples
  MainIs:         plot_taq_data.ml
  Install:        false
  BuildDepends:   ibx, gnuplot
  CompiledObject: best

Executable "print_account_updates"
  Build$:         flag(examples)
  Path:           examples
  MainIs:         print_account_updates.ml
  Install:        false
  BuildDepends:   ibx
  CompiledObject: best

Executable "print_market_depth"
  Build$:         flag(examples)
  Path:           examples
  MainIs:         print_market_depth.ml
  Install:        false
  BuildDepends:   ibx
  CompiledObject: best

Executable "print_realtime_bars"
  Build$:         flag(examples)
  Path:           examples
  MainIs:         print_realtime_bars.ml
  Install:        false
  BuildDepends:   ibx
  CompiledObject: best

Executable "option_chain"
  Build$:         flag(examples)
  Path:           examples
  MainIs:         option_chain.ml
  Install:        false
  BuildDepends:   ibx
  CompiledObject: best

Executable "quote_table"
  Build$:         flag(examples)
  Path:           examples
  MainIs:         quote_table.ml
  Install:        false
  BuildDepends:   ibx
  CompiledObject: best

Executable "server_time"
  Build$:         flag(examples)
  Path:           examples
  MainIs:         server_time.ml
  Install:        false
  BuildDepends:   ibx
  CompiledObject: best

Executable "show_portfolio"
  Build$:         flag(examples)
  Path:           examples
  MainIs:         show_portfolio.ml
  Install:        false
  BuildDepends:   ibx
  CompiledObject: best

Executable "submit_orders"
  Build$:         flag(examples)
  Path:           examples
  MainIs:         submit_orders.ml
  Install:        false
  BuildDepends:   ibx
  CompiledObject: best

# Documentation

Document API
  Title:           API reference for IBX
  Type:            Ocamlbuild (0.3)
  Install:         true
  InstallDir:      $docdir/api
  BuildTools:      ocamldoc
  XOCamlbuildPath: .
  XOCamlbuildLibraries: ibx
